you apply 2's complement operation only is msb is 1

0x0013
1 * 16 + 3 = 19

0x1234 
to binary
0b0001010....

0xFFFF
binary
 0b1111111111111111
~0b1111111111111111 + 1 =
 0b0000000000000000 + 1 = 
 0b0000000000000001 -> -1

0x8000
binary
 0b100000000000000
~0b100000000000000 + 1 =
~0b011111111111111 + 1 =
~0b100000000000000 -> 2^15 = 32768


-5 
first write 5 in binary
 0b00000101 
~0b00000101 + 1 =
 0b11111010 + 1 =
 0b11111011 -> -5

~0b11111011 + 1 =
 0b00000100 + 1 =
 0b00000101
 
8 bit number
1st bit is sign (whether negative or positive)
7 bits of number

1 0000000 -> -0
0 0000000 ->  0

----

-100
 0b00110100 
~0b00110100 + 1 =
 0b11001011 + 1 =
 0b11001100

~0b11001100 + 1 =
 0b00110011 + 1 =
 0b00110100

0 01111111 10000000000000000000000 
(-1)^sign * (1 + frac) * 2^(exp - 127)
1 * (1.5) * 2 ^ 0
1.5

1 10000000 01100000000000000000000 
(-1)^sign * (1 + frac) * 2^(exp - 127)
-1 * (1.375) * 2^1
-1.375 * 2
-2.75


2.5
to binary
10.1
1.01 * 2
0 1000000 0100000000000000

0.375 
to binary
0.011 
1.1 * 2^-2
0 0111101 10000000000000000 